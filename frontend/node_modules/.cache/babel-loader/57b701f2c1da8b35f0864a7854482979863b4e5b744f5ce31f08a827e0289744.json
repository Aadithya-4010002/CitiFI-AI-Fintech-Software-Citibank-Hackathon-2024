{"ast":null,"code":"var _jsxFileName = \"/Users/aadithyaram/Desktop/citibank_plaid/src/examples/Charts/BarCharts/ReportsBarChart/index.js\",\n  _s = $RefreshSig$();\n/**\n=========================================================\n* Argon Dashboard 2 MUI - v3.0.1\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-material-ui\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useMemo } from \"react\";\n\n// porp-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-chartjs-2 components\nimport { Bar } from \"react-chartjs-2\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport Grid from \"@mui/material/Grid\";\n\n// Argon Dashboard 2 MUI components\nimport ArgonBox from \"components/ArgonBox\";\nimport ArgonTypography from \"components/ArgonTypography\";\n\n// Argon Dashboard 2 MUI example components\nimport BarReportsChartItem from \"examples/Charts/BarCharts/ReportsBarChart/ReportsBarChartItem\";\n\n// ReportsBarChart configurations\nimport configs from \"examples/Charts/BarCharts/ReportsBarChart/configs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReportsBarChart({\n  color,\n  title,\n  description,\n  chart,\n  items\n}) {\n  _s();\n  const {\n    data,\n    options\n  } = configs(chart.labels || [], chart.datasets || {});\n  const renderItems = items.map(({\n    icon,\n    label,\n    progress\n  }) => /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    children: /*#__PURE__*/_jsxDEV(BarReportsChartItem, {\n      color: color,\n      icon: {\n        color: icon.color,\n        component: icon.component\n      },\n      label: label,\n      progress: {\n        content: progress.content,\n        percentage: progress.percentage\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, label, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      height: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(ArgonBox, {\n      padding: \"1rem\",\n      children: [useMemo(() => /*#__PURE__*/_jsxDEV(ArgonBox, {\n        variant: \"gradient\",\n        bgColor: color,\n        borderRadius: \"lg\",\n        py: 2,\n        pr: 0.5,\n        mb: 3,\n        height: \"12.5rem\",\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: data,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), [chart, color]), /*#__PURE__*/_jsxDEV(ArgonBox, {\n        px: 1,\n        children: [/*#__PURE__*/_jsxDEV(ArgonBox, {\n          mb: 2,\n          children: [/*#__PURE__*/_jsxDEV(ArgonTypography, {\n            variant: \"h6\",\n            fontWeight: \"medium\",\n            textTransform: \"capitalize\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ArgonTypography, {\n            component: \"div\",\n            variant: \"button\",\n            color: \"text\",\n            fontWeight: \"regular\",\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ArgonBox, {\n          py: 1,\n          px: 0.5,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: renderItems\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n// Setting default values for the props of ReportsBarChart\n_s(ReportsBarChart, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");\n_c = ReportsBarChart;\nReportsBarChart.defaultProps = {\n  color: \"dark\",\n  description: \"\",\n  items: []\n};\n\n// Typechecking props for the ReportsBarChart\nReportsBarChart.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\n  title: PropTypes.string.isRequired,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  chart: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.array, PropTypes.object])).isRequired,\n  items: PropTypes.arrayOf(PropTypes.object)\n};\nexport default ReportsBarChart;\nvar _c;\n$RefreshReg$(_c, \"ReportsBarChart\");","map":{"version":3,"names":["useMemo","PropTypes","Bar","Card","Grid","ArgonBox","ArgonTypography","BarReportsChartItem","configs","jsxDEV","_jsxDEV","ReportsBarChart","color","title","description","chart","items","_s","data","options","labels","datasets","renderItems","map","icon","label","progress","item","xs","sm","children","component","content","percentage","fileName","_jsxFileName","lineNumber","columnNumber","sx","height","padding","variant","bgColor","borderRadius","py","pr","mb","px","fontWeight","textTransform","container","spacing","_c","defaultProps","propTypes","oneOf","string","isRequired","oneOfType","node","objectOf","array","object","arrayOf","$RefreshReg$"],"sources":["/Users/aadithyaram/Desktop/citibank_plaid/src/examples/Charts/BarCharts/ReportsBarChart/index.js"],"sourcesContent":["/**\n=========================================================\n* Argon Dashboard 2 MUI - v3.0.1\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-material-ui\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useMemo } from \"react\";\n\n// porp-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-chartjs-2 components\nimport { Bar } from \"react-chartjs-2\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport Grid from \"@mui/material/Grid\";\n\n// Argon Dashboard 2 MUI components\nimport ArgonBox from \"components/ArgonBox\";\nimport ArgonTypography from \"components/ArgonTypography\";\n\n// Argon Dashboard 2 MUI example components\nimport BarReportsChartItem from \"examples/Charts/BarCharts/ReportsBarChart/ReportsBarChartItem\";\n\n// ReportsBarChart configurations\nimport configs from \"examples/Charts/BarCharts/ReportsBarChart/configs\";\n\nfunction ReportsBarChart({ color, title, description, chart, items }) {\n  const { data, options } = configs(chart.labels || [], chart.datasets || {});\n\n  const renderItems = items.map(({ icon, label, progress }) => (\n    <Grid item xs={6} sm={3} key={label}>\n      <BarReportsChartItem\n        color={color}\n        icon={{ color: icon.color, component: icon.component }}\n        label={label}\n        progress={{ content: progress.content, percentage: progress.percentage }}\n      />\n    </Grid>\n  ));\n\n  return (\n    <Card sx={{ height: \"100%\" }}>\n      <ArgonBox padding=\"1rem\">\n        {useMemo(\n          () => (\n            <ArgonBox\n              variant=\"gradient\"\n              bgColor={color}\n              borderRadius=\"lg\"\n              py={2}\n              pr={0.5}\n              mb={3}\n              height=\"12.5rem\"\n            >\n              <Bar data={data} options={options} />\n            </ArgonBox>\n          ),\n          [chart, color]\n        )}\n        <ArgonBox px={1}>\n          <ArgonBox mb={2}>\n            <ArgonTypography variant=\"h6\" fontWeight=\"medium\" textTransform=\"capitalize\">\n              {title}\n            </ArgonTypography>\n            <ArgonTypography component=\"div\" variant=\"button\" color=\"text\" fontWeight=\"regular\">\n              {description}\n            </ArgonTypography>\n          </ArgonBox>\n          <ArgonBox py={1} px={0.5}>\n            <Grid container spacing={2}>\n              {renderItems}\n            </Grid>\n          </ArgonBox>\n        </ArgonBox>\n      </ArgonBox>\n    </Card>\n  );\n}\n\n// Setting default values for the props of ReportsBarChart\nReportsBarChart.defaultProps = {\n  color: \"dark\",\n  description: \"\",\n  items: [],\n};\n\n// Typechecking props for the ReportsBarChart\nReportsBarChart.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\n  title: PropTypes.string.isRequired,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  chart: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.array, PropTypes.object])).isRequired,\n  items: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default ReportsBarChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}