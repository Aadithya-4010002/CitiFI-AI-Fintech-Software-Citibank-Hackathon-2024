{"ast":null,"code":"var _jsxFileName = \"/Users/aadithyaram/Desktop/citibank_plaid/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { Box, Button, TextField, Typography, Paper, Container, Avatar } from '@mui/material';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport { useArgonController } from \"context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [conversation, setConversation] = useState([]);\n  const [currentResponse, setCurrentResponse] = useState('');\n  const [typingIndex, setTypingIndex] = useState(0);\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Detect if dark mode is preferred (based on user system settings)\n  const [controller] = useArgonController();\n  const {\n    darkMode,\n    darkSidenav\n  } = controller; // Assuming darkMode and darkSidenav are part of controller\n\n  const prefersDarkMode = darkMode; // Correctly referencing darkMode from controller\n\n  const [expanded, setExpanded] = useState(false);\n\n  // Define the theme with light/dark mode support\n  const theme = createTheme({\n    palette: {\n      mode: prefersDarkMode ? 'dark' : 'light',\n      // Dynamically set light/dark mode\n      primary: {\n        main: prefersDarkMode ? '#333' : '#ccc' // Adjust primary color based on mode\n      },\n      secondary: {\n        main: prefersDarkMode ? '#f48fb1' : '#c62828' // Adjust secondary color based on mode\n      },\n      background: {\n        default: prefersDarkMode ? '#303030' : '#f5f5f5',\n        // Set background colors\n        paper: prefersDarkMode ? '#424242' : '#ffffff' // Set paper background\n      },\n      text: {\n        primary: prefersDarkMode ? '#ffffff' : '#000000',\n        // Adjust text color based on mode\n        secondary: prefersDarkMode ? '#bdbdbd' : '#424242' // Adjust secondary text color\n      }\n    },\n    components: {\n      MuiPaper: {\n        styleOverrides: {\n          elevation3: {\n            boxShadow: 'none' // Remove unnecessary shadow\n          }\n        }\n      }\n    }\n  });\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n  // Load conversation from localStorage when the component mounts\n  useEffect(() => {\n    const savedConversation = localStorage.getItem('chatConversation');\n    if (savedConversation) {\n      setConversation(JSON.parse(savedConversation));\n    }\n  }, []);\n\n  // Save conversation to localStorage whenever it updates\n  useEffect(() => {\n    if (conversation.length > 0) {\n      const conversationToSave = conversation.slice(-5); // Keep only the last 5 messages\n      localStorage.setItem('chatConversation', JSON.stringify(conversationToSave));\n    }\n  }, [conversation]);\n  const handleGenerate = async () => {\n    if (prompt.trim()) {\n      try {\n        const result = await axios.post('http://localhost:8000/chat', {\n          prompt\n        });\n        setConversation(prev => [...prev, {\n          sender: 'user',\n          text: prompt\n        }]);\n        setCurrentResponse(result.data.response);\n        setIsTyping(true);\n        setTypingIndex(0);\n        setPrompt('');\n      } catch (error) {\n        console.error('Error generating response:', error);\n      }\n    }\n  };\n  useEffect(() => {\n    if (isTyping && typingIndex < currentResponse.length) {\n      const timeout = setTimeout(() => {\n        setConversation(prev => {\n          const lastMessage = prev[prev.length - 1];\n          if (lastMessage && lastMessage.sender === 'bot') {\n            return [...prev.slice(0, -1), {\n              sender: 'bot',\n              text: lastMessage.text + currentResponse[typingIndex]\n            }];\n          } else {\n            return [...prev, {\n              sender: 'bot',\n              text: currentResponse[typingIndex]\n            }];\n          }\n        });\n        setTypingIndex(prev => prev + 1);\n      }, 50);\n      return () => clearTimeout(timeout);\n    } else if (typingIndex === currentResponse.length) {\n      setIsTyping(false);\n    }\n  }, [typingIndex, isTyping, currentResponse]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [conversation]);\n\n  // Clear chat history\n  const handleClearChat = () => {\n    setConversation([]);\n    localStorage.removeItem('chatConversation');\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      style: {\n        backgroundColor: theme.palette.background.default,\n        padding: '20px',\n        borderRadius: '12px',\n        boxShadow: 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        style: {\n          textAlign: 'center',\n          margin: '20px 0',\n          fontWeight: 'bold',\n          color: \"#1565c0a4\"\n        },\n        children: \"Relationship Manager AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        style: {\n          padding: '30px',\n          maxHeight: '600px',\n          overflowY: 'auto',\n          marginBottom: '20px',\n          borderRadius: '12px',\n          backgroundColor: theme.palette.background.paper\n        },\n        children: [conversation.map((message, index) => /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: message.sender === 'user' ? 'flex-end' : 'flex-start',\n          alignItems: \"center\",\n          mb: 2,\n          children: [message.sender === 'bot' && /*#__PURE__*/_jsxDEV(Avatar, {\n            alt: \"Bot\",\n            src: \"/path-to-bot-image.jpg\",\n            style: {\n              marginRight: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            style: {\n              padding: '15px',\n              backgroundColor: message.sender === 'user' ? theme.palette.primary.main : theme.palette.background.paper,\n              color: message.sender === 'user' ? theme.palette.text.primary : theme.palette.text.secondary,\n              maxWidth: '75%',\n              borderRadius: '12px',\n              fontSize: '14px',\n              boxShadow: 'none'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              style: {\n                whiteSpace: 'pre-wrap',\n                wordWrap: 'break-word'\n              },\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 29\n          }, this), message.sender === 'user' && /*#__PURE__*/_jsxDEV(Avatar, {\n            alt: \"User\",\n            src: \"/path-to-user-image.jpg\",\n            style: {\n              marginLeft: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        mb: 2,\n        style: {\n          padding: '4px',\n          backgroundColor: theme.palette.background.paper,\n          borderRadius: '16px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          color: \"primary\",\n          fullWidth: true,\n          placeholder: \"Type your message\",\n          value: prompt,\n          onChange: e => setPrompt(e.target.value),\n          onKeyPress: e => {\n            if (e.key === 'Enter') {\n              e.preventDefault();\n              handleGenerate();\n            }\n          },\n          style: {\n            marginRight: '10px',\n            borderRadius: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"info\",\n          onClick: handleGenerate,\n          style: {\n            padding: '10px 20px',\n            borderRadius: '8px',\n            textTransform: 'none',\n            boxShadow: 'none'\n          },\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        textAlign: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"secondary\",\n          onClick: handleClearChat,\n          style: {\n            textTransform: 'none',\n            borderRadius: '8px'\n          },\n          children: \"Clear Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatBot, \"u0U22YYfMCDOuvhqERVgRwlYQHk=\", false, function () {\n  return [useArgonController];\n});\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","Box","Button","TextField","Typography","Paper","Container","Avatar","ThemeProvider","createTheme","useArgonController","jsxDEV","_jsxDEV","ChatBot","_s","prompt","setPrompt","conversation","setConversation","currentResponse","setCurrentResponse","typingIndex","setTypingIndex","isTyping","setIsTyping","messagesEndRef","controller","darkMode","darkSidenav","prefersDarkMode","expanded","setExpanded","theme","palette","mode","primary","main","secondary","background","default","paper","text","components","MuiPaper","styleOverrides","elevation3","boxShadow","handleChange","panel","event","isExpanded","savedConversation","localStorage","getItem","JSON","parse","length","conversationToSave","slice","setItem","stringify","handleGenerate","trim","result","post","prev","sender","data","response","error","console","timeout","setTimeout","lastMessage","clearTimeout","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleClearChat","removeItem","children","maxWidth","style","backgroundColor","padding","borderRadius","variant","gutterBottom","textAlign","margin","fontWeight","color","fileName","_jsxFileName","lineNumber","columnNumber","elevation","maxHeight","overflowY","marginBottom","map","message","index","display","justifyContent","alignItems","mb","alt","src","marginRight","fontSize","whiteSpace","wordWrap","marginLeft","ref","fullWidth","placeholder","value","onChange","e","target","onKeyPress","key","preventDefault","onClick","textTransform","_c","$RefreshReg$"],"sources":["/Users/aadithyaram/Desktop/citibank_plaid/src/components/Chat.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { Box, Button, TextField, Typography, Paper, Container, Avatar } from '@mui/material';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport { useArgonController } from \"context\";\n\n\nconst ChatBot = () => {\n    const [prompt, setPrompt] = useState('');\n    const [conversation, setConversation] = useState([]);\n    const [currentResponse, setCurrentResponse] = useState('');\n    const [typingIndex, setTypingIndex] = useState(0);\n    const [isTyping, setIsTyping] = useState(false);\n    const messagesEndRef = useRef(null);\n\n    // Detect if dark mode is preferred (based on user system settings)\n    const [controller] = useArgonController();\n    const { darkMode, darkSidenav } = controller;  // Assuming darkMode and darkSidenav are part of controller\n\n    const prefersDarkMode = darkMode;  // Correctly referencing darkMode from controller\n\n    const [expanded, setExpanded] = useState(false);\n\n    // Define the theme with light/dark mode support\n    const theme = createTheme({\n        palette: {\n            mode: prefersDarkMode ? 'dark' : 'light',  // Dynamically set light/dark mode\n            primary: {\n                main: prefersDarkMode ? '#333' : '#ccc',  // Adjust primary color based on mode\n            },\n            secondary: {\n                main: prefersDarkMode ? '#f48fb1' : '#c62828',  // Adjust secondary color based on mode\n            },\n            background: {\n                default: prefersDarkMode ? '#303030' : '#f5f5f5',  // Set background colors\n                paper: prefersDarkMode ? '#424242' : '#ffffff',    // Set paper background\n            },\n            text: {\n                primary: prefersDarkMode ? '#ffffff' : '#000000',   // Adjust text color based on mode\n                secondary: prefersDarkMode ? '#bdbdbd' : '#424242', // Adjust secondary text color\n            },\n        },\n        components: {\n            MuiPaper: {\n                styleOverrides: {\n                    elevation3: {\n                        boxShadow: 'none',  // Remove unnecessary shadow\n                    },\n                },\n            },\n        },\n    });\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    }\n    // Load conversation from localStorage when the component mounts\n    useEffect(() => {\n        const savedConversation = localStorage.getItem('chatConversation');\n        if (savedConversation) {\n            setConversation(JSON.parse(savedConversation));\n        }\n    }, []);\n\n    // Save conversation to localStorage whenever it updates\n    useEffect(() => {\n        if (conversation.length > 0) {\n            const conversationToSave = conversation.slice(-5); // Keep only the last 5 messages\n            localStorage.setItem('chatConversation', JSON.stringify(conversationToSave));\n        }\n    }, [conversation]);\n\n    const handleGenerate = async () => {\n        if (prompt.trim()) {\n            try {\n                const result = await axios.post('http://localhost:8000/chat', { prompt });\n                setConversation((prev) => [...prev, { sender: 'user', text: prompt }]);\n                setCurrentResponse(result.data.response);\n                setIsTyping(true);\n                setTypingIndex(0);\n                setPrompt('');\n            } catch (error) {\n                console.error('Error generating response:', error);\n            }\n        }\n    };\n\n    useEffect(() => {\n        if (isTyping && typingIndex < currentResponse.length) {\n            const timeout = setTimeout(() => {\n                setConversation((prev) => {\n                    const lastMessage = prev[prev.length - 1];\n                    if (lastMessage && lastMessage.sender === 'bot') {\n                        return [\n                            ...prev.slice(0, -1),\n                            { sender: 'bot', text: lastMessage.text + currentResponse[typingIndex] },\n                        ];\n                    } else {\n                        return [...prev, { sender: 'bot', text: currentResponse[typingIndex] }];\n                    }\n                });\n                setTypingIndex((prev) => prev + 1);\n            }, 50);\n            return () => clearTimeout(timeout);\n        } else if (typingIndex === currentResponse.length) {\n            setIsTyping(false);\n        }\n    }, [typingIndex, isTyping, currentResponse]);\n\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n    };\n\n    useEffect(() => {\n        scrollToBottom();\n    }, [conversation]);\n\n    // Clear chat history\n    const handleClearChat = () => {\n        setConversation([]);\n        localStorage.removeItem('chatConversation');\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Container maxWidth=\"sm\" style={{ backgroundColor: theme.palette.background.default, padding: '20px', borderRadius: '12px', boxShadow: 'none' }}>\n                <Typography variant=\"h5\" gutterBottom style={{ textAlign: 'center', margin: '20px 0', fontWeight: 'bold', color: \"#1565c0a4\" }}>\n                    Relationship Manager AI\n                </Typography>\n                <Paper elevation={3} style={{ padding: '30px', maxHeight: '600px', overflowY: 'auto', marginBottom: '20px', borderRadius: '12px', backgroundColor: theme.palette.background.paper }}>\n                    {conversation.map((message, index) => (\n                        <Box\n                            key={index}\n                            display=\"flex\"\n                            justifyContent={message.sender === 'user' ? 'flex-end' : 'flex-start'}\n                            alignItems=\"center\"\n                            mb={2}\n                        >\n                            {message.sender === 'bot' && (\n                                <Avatar alt=\"Bot\" src=\"/path-to-bot-image.jpg\" style={{ marginRight: '10px' }} />\n                            )}\n                            <Paper\n                                style={{\n                                    padding: '15px',\n                                    backgroundColor: message.sender === 'user' ? theme.palette.primary.main : theme.palette.background.paper,\n                                    color: message.sender === 'user' ? theme.palette.text.primary : theme.palette.text.secondary,\n                                    maxWidth: '75%',\n                                    borderRadius: '12px',\n                                    fontSize: '14px',\n                                    boxShadow: 'none',\n                                }}\n                            >\n                                <Typography variant=\"body2\" style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}>\n                                    {message.text}\n                                </Typography>\n                            </Paper>\n                            {message.sender === 'user' && (\n                                <Avatar alt=\"User\" src=\"/path-to-user-image.jpg\" style={{ marginLeft: '10px' }} />\n                            )}\n                        </Box>\n                    ))}\n                    <div ref={messagesEndRef} />\n                </Paper>\n                <Box display=\"flex\" alignItems=\"center\" mb={2} style={{ padding: '4px', backgroundColor: theme.palette.background.paper, borderRadius: '16px' }}>\n                    <TextField\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        fullWidth\n                        placeholder=\"Type your message\"\n                        value={prompt}\n                        onChange={(e) => setPrompt(e.target.value)}\n                        onKeyPress={(e) => {\n                            if (e.key === 'Enter') {\n                                e.preventDefault();\n                                handleGenerate();\n                            }\n                        }}\n                        style={{ marginRight: '10px', borderRadius: '8px' }}\n                    />\n                    <Button\n                        variant=\"outlined\"\n                        color=\"info\"\n                        onClick={handleGenerate}\n                        style={{ padding: '10px 20px', borderRadius: '8px', textTransform: 'none', boxShadow: 'none' }}\n                    >\n                        Send\n                    </Button>\n                </Box>\n                <Box textAlign=\"center\">\n                    <Button\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        onClick={handleClearChat}\n                        style={{ textTransform: 'none', borderRadius: '8px' }}\n                    >\n                        Clear Chat\n                    </Button>\n                </Box>\n            </Container>\n        </ThemeProvider>\n    );\n};\n\nexport default ChatBot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}