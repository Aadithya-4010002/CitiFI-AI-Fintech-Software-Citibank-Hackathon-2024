{"ast":null,"code":"var _jsxFileName = \"/Users/aadithyaram/Desktop/citibank_plaid/src/examples/Charts/MixedChart/index.js\",\n  _s = $RefreshSig$();\n/**\n=========================================================\n* Argon Dashboard 2 MUI - v3.0.1\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-material-ui\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useRef, useEffect, useState, useMemo } from \"react\";\n\n// porp-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-chartjs-2 components\nimport { Line } from \"react-chartjs-2\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\n\n// Argon Dashboard 2 MUI components\nimport ArgonBox from \"components/ArgonBox\";\nimport ArgonTypography from \"components/ArgonTypography\";\n\n// Argon Dashboard 2 MUI helper functions\nimport gradientChartLine from \"assets/theme/functions/gradientChartLine\";\n\n// MixedChart configurations\nimport configs from \"examples/Charts/MixedChart/configs\";\n\n// Argon Dashboard 2 MUI base styles\nimport colors from \"assets/theme/base/colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MixedChart({\n  title,\n  description,\n  height,\n  chart\n}) {\n  _s();\n  const chartRef = useRef(null);\n  const [chartData, setChartData] = useState({});\n  const {\n    data,\n    options\n  } = chartData;\n  useEffect(() => {\n    const chartDatasets = chart.datasets ? chart.datasets.map(dataset => {\n      let finalConfigs;\n      const defaultLine = {\n        ...dataset,\n        type: \"line\",\n        tension: 0.4,\n        borderWidth: 3,\n        pointRadius: 2,\n        pointBackgroundColor: colors[dataset.color] ? colors[dataset.color || \"dark\"].main : colors.dark.main,\n        borderColor: colors[dataset.color] ? colors[dataset.color || \"dark\"].main : colors.dark.main,\n        maxBarThickness: 6\n      };\n      const gradientLine = {\n        ...dataset,\n        type: \"line\",\n        tension: 0.4,\n        pointRadius: 0,\n        borderWidth: 3,\n        borderColor: colors[dataset.color] ? colors[dataset.color || \"dark\"].main : colors.dark.main,\n        fill: true,\n        maxBarThickness: 6,\n        backgroundColor: gradientChartLine(chartRef.current.children[0], colors[dataset.color] ? colors[dataset.color || \"dark\"].main : colors.dark.main)\n      };\n      const bar = {\n        ...dataset,\n        type: \"bar\",\n        weight: 5,\n        borderWidth: 0,\n        borderRadius: 4,\n        backgroundColor: colors[dataset.color] ? colors[dataset.color || \"dark\"].main : colors.dark.main,\n        fill: false,\n        maxBarThickness: 35\n      };\n      const thinBar = {\n        ...dataset,\n        type: \"bar\",\n        weight: 5,\n        borderWidth: 0,\n        borderRadius: 4,\n        backgroundColor: colors[dataset.color] ? colors[dataset.color || \"dark\"].main : colors.dark.main,\n        fill: false,\n        maxBarThickness: 10\n      };\n      if (dataset.chartType === \"default-line\") {\n        finalConfigs = defaultLine;\n      } else if (dataset.chartType === \"gradient-line\") {\n        finalConfigs = gradientLine;\n      } else if (dataset.chartType === \"thin-bar\") {\n        finalConfigs = thinBar;\n      } else {\n        finalConfigs = bar;\n      }\n      return {\n        ...finalConfigs\n      };\n    }) : [];\n    setChartData(configs(chart.labels || [], chartDatasets));\n  }, [chart]);\n  const renderChart = /*#__PURE__*/_jsxDEV(ArgonBox, {\n    p: 2,\n    children: [title || description ? /*#__PURE__*/_jsxDEV(ArgonBox, {\n      px: description ? 1 : 0,\n      pt: description ? 1 : 0,\n      children: [title && /*#__PURE__*/_jsxDEV(ArgonBox, {\n        mb: 1,\n        children: /*#__PURE__*/_jsxDEV(ArgonTypography, {\n          variant: \"h6\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ArgonBox, {\n        mb: 2,\n        children: /*#__PURE__*/_jsxDEV(ArgonTypography, {\n          component: \"div\",\n          variant: \"button\",\n          fontWeight: \"regular\",\n          color: \"text\",\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this) : null, useMemo(() => /*#__PURE__*/_jsxDEV(ArgonBox, {\n      ref: chartRef,\n      sx: {\n        height\n      },\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }, this), [chartData, height])]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n  return title || description ? /*#__PURE__*/_jsxDEV(Card, {\n    children: renderChart\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 33\n  }, this) : renderChart;\n}\n\n// Setting default values for the props of MixedChart\n_s(MixedChart, \"n3wPcHgMRERcqUWkVtpcWGQ3sy8=\");\n_c = MixedChart;\nMixedChart.defaultProps = {\n  title: \"\",\n  description: \"\",\n  height: \"19.125rem\"\n};\n\n// Typechecking props for the MixedChart\nMixedChart.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  chart: PropTypes.objectOf(PropTypes.array).isRequired\n};\nexport default MixedChart;\nvar _c;\n$RefreshReg$(_c, \"MixedChart\");","map":{"version":3,"names":["useRef","useEffect","useState","useMemo","PropTypes","Line","Card","ArgonBox","ArgonTypography","gradientChartLine","configs","colors","jsxDEV","_jsxDEV","MixedChart","title","description","height","chart","_s","chartRef","chartData","setChartData","data","options","chartDatasets","datasets","map","dataset","finalConfigs","defaultLine","type","tension","borderWidth","pointRadius","pointBackgroundColor","color","main","dark","borderColor","maxBarThickness","gradientLine","fill","backgroundColor","current","children","bar","weight","borderRadius","thinBar","chartType","labels","renderChart","p","px","pt","mb","variant","fileName","_jsxFileName","lineNumber","columnNumber","component","fontWeight","ref","sx","_c","defaultProps","propTypes","string","oneOfType","node","number","objectOf","array","isRequired","$RefreshReg$"],"sources":["/Users/aadithyaram/Desktop/citibank_plaid/src/examples/Charts/MixedChart/index.js"],"sourcesContent":["/**\n=========================================================\n* Argon Dashboard 2 MUI - v3.0.1\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-material-ui\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useRef, useEffect, useState, useMemo } from \"react\";\n\n// porp-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-chartjs-2 components\nimport { Line } from \"react-chartjs-2\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\n\n// Argon Dashboard 2 MUI components\nimport ArgonBox from \"components/ArgonBox\";\nimport ArgonTypography from \"components/ArgonTypography\";\n\n// Argon Dashboard 2 MUI helper functions\nimport gradientChartLine from \"assets/theme/functions/gradientChartLine\";\n\n// MixedChart configurations\nimport configs from \"examples/Charts/MixedChart/configs\";\n\n// Argon Dashboard 2 MUI base styles\nimport colors from \"assets/theme/base/colors\";\n\nfunction MixedChart({ title, description, height, chart }) {\n  const chartRef = useRef(null);\n  const [chartData, setChartData] = useState({});\n  const { data, options } = chartData;\n\n  useEffect(() => {\n    const chartDatasets = chart.datasets\n      ? chart.datasets.map((dataset) => {\n          let finalConfigs;\n\n          const defaultLine = {\n            ...dataset,\n            type: \"line\",\n            tension: 0.4,\n            borderWidth: 3,\n            pointRadius: 2,\n            pointBackgroundColor: colors[dataset.color]\n              ? colors[dataset.color || \"dark\"].main\n              : colors.dark.main,\n            borderColor: colors[dataset.color]\n              ? colors[dataset.color || \"dark\"].main\n              : colors.dark.main,\n            maxBarThickness: 6,\n          };\n\n          const gradientLine = {\n            ...dataset,\n            type: \"line\",\n            tension: 0.4,\n            pointRadius: 0,\n            borderWidth: 3,\n            borderColor: colors[dataset.color]\n              ? colors[dataset.color || \"dark\"].main\n              : colors.dark.main,\n            fill: true,\n            maxBarThickness: 6,\n            backgroundColor: gradientChartLine(\n              chartRef.current.children[0],\n              colors[dataset.color] ? colors[dataset.color || \"dark\"].main : colors.dark.main\n            ),\n          };\n\n          const bar = {\n            ...dataset,\n            type: \"bar\",\n            weight: 5,\n            borderWidth: 0,\n            borderRadius: 4,\n            backgroundColor: colors[dataset.color]\n              ? colors[dataset.color || \"dark\"].main\n              : colors.dark.main,\n            fill: false,\n            maxBarThickness: 35,\n          };\n\n          const thinBar = {\n            ...dataset,\n            type: \"bar\",\n            weight: 5,\n            borderWidth: 0,\n            borderRadius: 4,\n            backgroundColor: colors[dataset.color]\n              ? colors[dataset.color || \"dark\"].main\n              : colors.dark.main,\n            fill: false,\n            maxBarThickness: 10,\n          };\n\n          if (dataset.chartType === \"default-line\") {\n            finalConfigs = defaultLine;\n          } else if (dataset.chartType === \"gradient-line\") {\n            finalConfigs = gradientLine;\n          } else if (dataset.chartType === \"thin-bar\") {\n            finalConfigs = thinBar;\n          } else {\n            finalConfigs = bar;\n          }\n\n          return { ...finalConfigs };\n        })\n      : [];\n\n    setChartData(configs(chart.labels || [], chartDatasets));\n  }, [chart]);\n\n  const renderChart = (\n    <ArgonBox p={2}>\n      {title || description ? (\n        <ArgonBox px={description ? 1 : 0} pt={description ? 1 : 0}>\n          {title && (\n            <ArgonBox mb={1}>\n              <ArgonTypography variant=\"h6\">{title}</ArgonTypography>\n            </ArgonBox>\n          )}\n          <ArgonBox mb={2}>\n            <ArgonTypography component=\"div\" variant=\"button\" fontWeight=\"regular\" color=\"text\">\n              {description}\n            </ArgonTypography>\n          </ArgonBox>\n        </ArgonBox>\n      ) : null}\n      {useMemo(\n        () => (\n          <ArgonBox ref={chartRef} sx={{ height }}>\n            <Line data={data} options={options} />\n          </ArgonBox>\n        ),\n        [chartData, height]\n      )}\n    </ArgonBox>\n  );\n\n  return title || description ? <Card>{renderChart}</Card> : renderChart;\n}\n\n// Setting default values for the props of MixedChart\nMixedChart.defaultProps = {\n  title: \"\",\n  description: \"\",\n  height: \"19.125rem\",\n};\n\n// Typechecking props for the MixedChart\nMixedChart.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  chart: PropTypes.objectOf(PropTypes.array).isRequired,\n};\n\nexport default MixedChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}